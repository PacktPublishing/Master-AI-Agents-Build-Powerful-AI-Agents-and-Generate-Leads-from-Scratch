{\rtf1\ansi\ansicpg1252\cocoartf2639
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
const output = $input.first().json.output;\
console.log(output);\
\
const results = [];\
\
// Split the output into blocks, filtering for valid email blocks\
const emailBlocks = output\
  .split(`\\n\\n`)\
  .filter(block => block.includes('**Email**') && block.includes('**Message ID**'));\
\
for (const block of emailBlocks) \{\
  const nameMatch = block.match(/\\*\\*(.*?)\\*\\*/);\
  const emailMatch = block.match(/\\*\\*Email\\*\\*: ([^\\n]+)/);\
  const messageIdMatch = block.match(/\\*\\*Message ID\\*\\*: ([a-zA-Z0-9]+)/);\
\
  if (nameMatch && emailMatch && messageIdMatch) \{\
    results.push(\{\
      json: \{\
        Name: nameMatch[1],\
        Email: emailMatch[1].trim(),\
        MessageID: messageIdMatch[1].trim()\
      \}\
    \});\
  \}\
\}\
\
return results;}